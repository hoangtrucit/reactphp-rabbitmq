version: "2"

services:
  rabbitmq:
    container_name: "sv-amq"
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "user"
      RABBITMQ_DEFAULT_PASS: "user"
    networks:
      - php-rabbitmq

  php:
    container_name: "sv-consume-amq"
    build:
      context: .
      dockerfile: Dockerfile-amq
    volumes:
      - ./src/amq:/app/src
      - ./composer.json:/app/composer.json
      - ./composer.lock:/app/composer.lock
    depends_on:
      - rabbitmq
    networks:
      - php-rabbitmq

  kinesis:
    container_name: "sv-consume-kinesis"
    build:
      context: .
      dockerfile: Dockerfile-kinesis
    environment:
      AWS_ACCESS_KEY_ID: "AWS_ACCESS_KEY_ID"
      AWS_SECRET_ACCESS_KEY: "AWS_SECRET_ACCESS_KEY"
    volumes:
    - ./src/kinesis:/app/src
    - ./composer.json:/app/composer.json
    - ./composer.lock:/app/composer.lock
    networks:
    - php-rabbitmq

networks:
  php-rabbitmq:
    driver: bridge